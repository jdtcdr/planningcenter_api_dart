/// =========================================================================
/// AUTO-GENERATED FILE CREATED ON 2022-03-08T16:42:05.329169
/// THIS FILE WAS AUTOMATICALLY GENERATED, MODIFICATIONS WILL BE OVERWRITTEN.
/// =========================================================================



import { PcoResource, PlanningCenterApiQuery, PcoCollection } from '../../pco.js'

/// This class represents a PCO Services BlockoutDate Object
/// 
/// - Application:        services
/// - Id:                 blockout_date
/// - Type:               BlockoutDate
/// - ApiVersion:         2018-11-01
/// - Is Deprecated:      false
/// - Is Collection Only: false
/// - Default Endpoint:   https://api.planningcenteronline.com/services/v2/people/1/blockout_dates
/// 
/// Description:
/// The actual dates generated by the blockout or its recurrence pattern. Generated up to a year in advance
/// 
/// Example:
/// ```json
/// {
///   "type": "BlockoutDate",
///   "id": "1",
///   "attributes": {
///     "group_identifier": "string",
///     "reason": "string",
///     "time_zone": "string",
///     "share": true,
///     "starts_at": "2000-01-01T12:00:00Z",
///     "ends_at": "2000-01-01T12:00:00Z",
///     "ends_at_utc": "2000-01-01T12:00:00Z",
///     "starts_at_utc": "2000-01-01T12:00:00Z"
///   },
///   "relationships": {
///     "person": {
///       "data": {
///         "type": "Person",
///         "id": "1"
///       }
///     },
///     "blockout": {
///       "data": {
///         "type": "Blockout",
///         "id": "1"
///       }
///     }
///   }
/// }
/// ```
/// 
/// Possible includes with parameter ?include=a,b
/// NONE
///
/// Possible queries using parameters like ?where[key]=value or ?where[key][gt|lt]=value
/// NONE
/// 
/// Possible orderings with parameter ?order=
/// NONE
///
/// All Outbound Edges:
/// NONE
/// 
/// All Inbound Edges:
/// - `blockoutdate-blockout-blockout_dates`: https://api.planningcenteronline.com/services/v2/people/1/blockouts/1/blockout_dates
/// 
/// All Actions:
/// NONE
///
export class PcoServicesBlockoutDate extends PcoResource {
  static kPcoApplication = 'services';
  static kTypeString = 'BlockoutDate';
  static kTypeId = 'blockout_date';
  static kApiVersion = '2018-11-01';
  static kShortestEdgeId = '';
  static kShortestEdgePathTemplate = 'https://api.planningcenteronline.com/services/v2/people/1/blockout_dates';
  static kDefaultPathTemplate = 'https://api.planningcenteronline.com/services/v2/people/1/blockout_dates';

  /// possible includes with parameter ?include=a,b
  /// 
  static get canInclude() { return [] }

  /// possible queries using parameters like ?where[key]=value or ?where[key][gt|lt]=value
  /// 
  static get canQuery() { return [] }

  /// possible orderings with parameter ?order=
  /// 
  static get canOrderBy() { return [] }

  // By using overridden getters, the parent class can call the getter and will get the results from the
  // child class. This lets the parent access the static variables of the child class.

  // overrides parent method
  get shortestEdgePath() { return PcoServicesBlockoutDate.kShortestEdgePathTemplate; }

  // overrides parent method
  get defaultPathTemplate() { return PcoServicesBlockoutDate.kDefaultPathTemplate; }

  // overrides parent method
  get apiVersion() { return PcoServicesBlockoutDate.kApiVersion; }

  _apiPathOverride;

  // overrides parent method
  get apiPath() { return this.links['self'] ?? _apiPathOverride ?? super.apiPath; }

  // field mapping constants
  static get kId() { return 'id' }
  static get kGroupIdentifier() { return 'group_identifier' }
  static get kReason() { return 'reason' }
  static get kTimeZone() { return 'time_zone' }
  static get kShare() { return 'share' }
  static get kStartsAt() { return 'starts_at' }
  static get kEndsAt() { return 'ends_at' }
  static get kEndsAtUtc() { return 'ends_at_utc' }
  static get kStartsAtUtc() { return 'starts_at_utc' }


  // getters and setters
  // @override
  get createAllowed() { return []; }

  // @override
  get updateAllowed() { return []; }

  // @override
  get canCreate() { return false; }

  // @override
  get canUpdate() { return false; }

  // @override
  get canDestroy() { return false; }

  // getters for object attributes

  get groupIdentifier() { return attributes[this.constructor.kGroupIdentifier] ?? ''; }
  get reason() { return attributes[this.constructor.kReason] ?? ''; }
  get timeZone() { return attributes[this.constructor.kTimeZone] ?? ''; }
  get isShare() { return attributes[this.constructor.kShare] == true; }
  get startsAt() { return Date.parse(attributes[this.constructor.kStartsAt] ?? 0); }
  get endsAt() { return Date.parse(attributes[this.constructor.kEndsAt] ?? 0); }
  get endsAtUtc() { return Date.parse(attributes[this.constructor.kEndsAtUtc] ?? 0); }
  get startsAtUtc() { return Date.parse(attributes[this.constructor.kStartsAtUtc] ?? 0); }
  

  // setters for object attributes

  

  // additional setters and getters for assignable values

  



  // Class Constructors
  // PcoServicesBlockoutDate._() : super(kPcoApplication, kTypeString);
  static createFromJson({ data, withIncludes = [] }) {
    let obj = new PcoServicesBlockoutDate({});

    // inherited methods
    obj.fromJson(data);
    obj.handleIncludes(withIncludes);
    return obj;
  };



  // ---------------------------------
  // Inbound Edges
  // ---------------------------------



  /// -- JAVASCRIPT --
  /// Will get a [PcoCollection] of [PcoServicesBlockoutDate] objects (expecting many)
  /// using a path like this: `/services/v2/people/${peopleId}/blockouts/${blockoutId}/blockout_dates`
  static getFromPeopleAndBlockout(peopleId, blockoutId, {id,  query, allIncludes = false}) {
    query = query ?? new PlanningCenterApiQuery({});
    if (allIncludes) query.include = PcoServicesBlockoutDate.canInclude;
    let apiVersion = this.kApiVersion; // reading static member from static member uses 'this'
    let url = `/services/v2/people/${peopleId}/blockouts/${blockoutId}/blockout_dates`;
    if (id != null) url += `/${id}`;
    return PcoCollection.fromApiCall(url, {query, apiVersion});
  }


  // --------------------------------
  // Outbound Edges
  // --------------------------------
  // Instance functions to traverse outbound edges



  // --------------------------------
  // Actions
  // --------------------------------
  // Instance functions to run actions from this item



}
